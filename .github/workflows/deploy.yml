name: Deploy

on:
  workflow_dispatch:

env:
  DOCKER_PORT: 8080:8080
  CONTAINET_NAME: url-shortner-client
  TAG: url-shortner-client_prod
  PROPERTIES: BACK_URL=${{ secrets.BACK_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Permissison
        run: chmod +x mvnw
      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker Build
        run: ./mvnw -B install -Dquarkus.container-image.push=true -Dquarkus.container-image.group=${{ secrets.DOCKER_REPOSITORY_USER }} -Dquarkus.container-image.name=${{ secrets.DOCKER_REPOSITORY_NAME }} -Dquarkus.container-image.tag=${{ env.TAG }} -Dquarkus.container-image.build=true
      - name: ssh and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }} # ホスト名
          username: ${{ secrets.SSH_USERNAME }} # SSH ユーザ名
          key: ${{ secrets.SSH_PRIVATE_KEY }} # 秘密鍵の内容 -----BEGIN PRIVATE KEY-----と-----END PRIVATE KEY-----含める。cat id_rsa_~.pub >> authorized_keys設定も忘れずに
          port: ${{ secrets.SSH_PORT }} # ポート番号
          script: |
            docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker stop ${{ env.CONTAINET_NAME }}
            docker pull ${{ secrets.DOCKER_REPOSITORY_USER }}/${{ secrets.DOCKER_REPOSITORY_NAME }}:${{ env.TAG }}
            docker run --rm -d -e ${{ env.PROPERTIES }} -p ${{ env.DOCKER_PORT }} --name ${{ env.CONTAINET_NAME }} ${{ secrets.DOCKER_REPOSITORY_USER }}/${{ secrets.DOCKER_REPOSITORY_NAME }}:${{ env.TAG }}